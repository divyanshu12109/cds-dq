def config(x):
    
    name = []
    for i in x:
        if any(str(item).replace(" ", "").isalpha() for item in x[i]):
            name.append(1)
        else:
            name.append(0)
            
    email = []
    pat = "^[a-zA-Z0-9-_]+@[a-zA-Z0-9]+.[a-z]{1,3}$"
    for i in x:
        if any(re.match(pat,str(item)) for item in x[i]):
            email.append(1)
        else:
            email.append(0)
        
    phone = []
    pat = "^[6-9][0-9]{9}$"
    for i in x:
        if any(re.match(pat,str(item)) for item in x[i]):
            phone.append(1)
        else:
            phone.append(0)
        
    dates = []
    for i in x:
        try:
            if any(parse(item) for item in x[i]):
                dates.append(1)
        except:
            dates.append(0)
        
    num = []
    for i in x:
        try:
            if any(int(item) for item in x[i]):
                num.append(1)
        except:
            num.append(0)
            
    t = []
    for i in x:
        try:
            if all(parse(item) for item in x[i]):
                t.append(1)
        except:
            t.append(0)
            
    nullable = []
    for i in x:
        if any(item == "NULL" for item in x[i]):
            nullable.append(1)
        nullable.append(0)
        
    spec = []
    pat = re.compile("[$&+,:;=?@#|'<>.\-^*()%!_]")
    for i in x:
        if any(pat.search(str(item)) is not None and type(item) == str for item in x[i]):
            spec.append(1)
        elif any(pat.search(str(item)) is None and type(item) == str for item in x[i]):
            spec.append(0)
        else:
            spec.append(0)
    
    dup = []
    for i in x:
        if x.duplicated(keep=False).sum() > 1:
            dup.append(1)
        dup.append(0)
    
    columns = []
    for i in x:
        columns.append(i)
        
    rules = ['COLUMNS', 'IS_NAME', 'IS_EMAIL', 'IS_MOBILE', 'IS_DATE', 'IS_NUMBER', 'DATE_FORMAT', 'NULL_REPLACE', 'SPEC_CHAR_FLAG', 'DUPLICATE_KEY']
    data = [columns, name, email, phone, dates, num, t, nullable, spec, dup]
    
    config_df = pd.DataFrame(columns = rules)
    for i in range(0,len(rules)):
        config_df[rules[i]] = data[i]
    
    return config_df
